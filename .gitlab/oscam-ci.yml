include:
  - local: .gitlab/oscam-helper.yml

variables:
  FF_USE_FASTZIP: 1
  TRANSFER_METER_FREQUENCY: "2s"
  ARTIFACT_COMPRESSION_LEVEL: "default"
  CACHE_COMPRESSION_LEVEL: "default"
  CACHE_REQUEST_TIMEOUT: 5

stages:
  - fixup
  - build
  - test
  - new-version
  - sync

info:
  stage: .pre
  tags:
    - build
  variables:
    GIT_STRATEGY: none
  rules:
    - if: $GITLAB_USER_NAME != 'pipeline-user'
  script:
    - !reference [.helper, runner-info]
  allow_failure: true

setup:
  stage: .pre
  tags:
    - build
  variables:
    GIT_STRATEGY: none
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $SETUP_BUILD_ENV == 'True'
    - if: $CI_PIPELINE_SOURCE == 'schedule' && $SETUP_BUILD_ENV == 'True'
  script:
    - !reference [.helper, runner-setup]
  allow_failure: true

oscam-build:
  stage: build
  tags:
    - build
  parallel:
    matrix:
      - ARCH: [native,ancient,latest,aarch64,armv7,mips32el,powerpc,sh4,android12]
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'schedule'
  script:
    - if [[ ! $BUILD_ARCHS =~ $ARCH ]]; then
        echo -e "\e[33mSkipped by configuration, check BUILD_ARCHS variable.\e[0m";
        exit 0;
      fi
    - !reference [.helper, custom-checkout]
    - !reference [.helper, oscam-build]
  artifacts:
    when: always
    paths:
      - build/${ARCH}/oscam-make-${ARCH}*
      - build/${ARCH}/oscam-cmake-${ARCH}*
    expire_in: 1 week
  allow_failure: true

oscam-test:
  stage: test
  tags:
    - test
  needs: [oscam-build]
  variables:
    GIT_STRATEGY: none
  parallel:
    matrix:
      - ARCH: [native]
        OSCAM_BUILD: [make,cmake]
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'schedule'
  script:
    - if [[ ! $BUILD_ARCHS =~ $ARCH ]]; then
        echo -e "\e[33mSkipped by configuration, check BUILD_ARCHS variable.\e[0m";
        exit 0;
      fi
    - !reference [.helper, oscam-startup-test]
  artifacts:
    when: always
    paths:
      - build/${ARCH}/oscam-${OSCAM_BUILD}-${ARCH}*-test.log
    expire_in: 1 week
  allow_failure: true

code-cleanup:
  stage: fixup
  tags:
    - clean
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $GITLAB_USER_NAME != 'pipeline-user'
    - if: $CI_PIPELINE_SOURCE == 'schedule' && $GITLAB_USER_NAME != 'pipeline-user'
  dependencies: []
  script:
    - !reference [.helper, fix-whitespaces]
  allow_failure: true

auto-version:
  stage: new-version
  tags:
    - version
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $GITLAB_USER_NAME != 'pipeline-user'
  script:
    - !reference [.helper, tag-version]
  allow_failure: false

rebase-merge-requests:
  stage: sync
  tags:
    - sync
  needs: [auto-version]
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $GITLAB_USER_NAME != 'pipeline-user'
  script:
    - !reference [.helper, rebase-mrs]
  allow_failure: true

invoke-api-actions:
  stage: sync
  tags:
    - sync
  needs: [auto-version]
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $GITLAB_USER_NAME != 'pipeline-user'
  script:
    - !reference [.helper, invoke-api]
  allow_failure: true
